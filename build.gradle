plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'nu.studer.jooq' version '8.2' // Зависимость для jOOQ
}

group = 'ru.tbank'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'org.postgresql:postgresql:42.7.2' // Подключаем PostgreSQL
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.jooq:jooq:3.17.0' // Версия jOOQ может отличаться
	jooqGenerator 'org.postgresql:postgresql:42.7.2' // Зависимость для базы данных (например, PostgreSQL)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jooq {
	version = '3.17.0' // Укажите версию jOOQ
	configurations {
		main {
			generationTool {
				jdbc {
					driver = 'org.postgresql.Driver'
					url = 'jdbc:postgresql://localhost:5432/postgres'
					user = 'postgres'
					password = 'password'
				}
				generator {
					database {
						name = 'org.jooq.meta.postgres.PostgresDatabase' // Для PostgreSQL
						inputSchema = 'public' // Схема базы данных
						includes = '.*' // Включить все таблицы
						excludes = '' // Исключить таблицы (если нужно)
					}
					generate {
						records = true
					}
					target {
						packageName = 'ru.tbank.test239' // Пакет для сгенерированных классов
						directory = 'build/generated/jooq' // Директория для генерации
					}
				}
			}
		}
	}
}


tasks.named('test') {
	useJUnitPlatform()
}